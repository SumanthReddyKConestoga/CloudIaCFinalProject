AWSTemplateFormatVersion: '2010-09-09'
Description: 'Public RDS MySQL (project only): VPC + 2 public subnets in distinct AZs + IGW + public RDS'

Parameters:
  DBName:            { Type: String, Default: assignment3 }
  DBUsername:        { Type: String, Default: adminuser }
  DBPassword:        { Type: String, NoEcho: true }
  InstanceClass:     { Type: String, Default: db.t3.micro }
  AllocatedStorage:  { Type: Number, Default: 20 }
  EngineVersion:     { Type: String, Default: "8.0" }
  VpcCidr:           { Type: String, Default: "10.70.0.0/16" }
  PublicSubnet1Cidr: { Type: String, Default: "10.70.11.0/24" }
  PublicSubnet2Cidr: { Type: String, Default: "10.70.12.0/24" }

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags: [{ Key: Name, Value: cf-rds-vpc }]

  IGW:
    Type: AWS::EC2::InternetGateway

  AttachIgw:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags: [{ Key: Name, Value: cf-rds-public-a }]

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags: [{ Key: Name, Value: cf-rds-public-b }]

  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW

  AssocPub1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRT
      SubnetId: !Ref PublicSubnet1

  AssocPub2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRT
      SubnetId: !Ref PublicSubnet2

  RDSSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Allow MySQL from anywhere (project only)
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0

  DBSubnets:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Public subnets for RDS
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2

  MyDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: cf-public-mysql
      Engine: mysql
      EngineVersion: !Ref EngineVersion
      DBInstanceClass: !Ref InstanceClass
      AllocatedStorage: !Ref AllocatedStorage
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBName: !Ref DBName
      PubliclyAccessible: true
      VPCSecurityGroups: [!Ref RDSSG]
      DBSubnetGroupName: !Ref DBSubnets
      MultiAZ: false
      DeletionProtection: false
      BackupRetentionPeriod: 0

Outputs:
  RdsEndpoint:
    Description: RDS endpoint
    Value: !GetAtt MyDB.Endpoint.Address
